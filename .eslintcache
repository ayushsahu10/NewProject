[{"C:\\Users\\ak\\Desktop\\NewProject\\src\\index.js":"1","C:\\Users\\ak\\Desktop\\NewProject\\src\\reportWebVitals.js":"2","C:\\Users\\ak\\Desktop\\NewProject\\src\\App.js":"3","C:\\Users\\ak\\Desktop\\NewProject\\src\\firebase.js":"4","C:\\Users\\ak\\Desktop\\NewProject\\src\\Widgets.js":"5","C:\\Users\\ak\\Desktop\\NewProject\\src\\Feed.js":"6","C:\\Users\\ak\\Desktop\\NewProject\\src\\Sidebar.js":"7","C:\\Users\\ak\\Desktop\\NewProject\\src\\Bookmark.js":"8","C:\\Users\\ak\\Desktop\\NewProject\\src\\Search.js":"9","C:\\Users\\ak\\Desktop\\NewProject\\src\\Notification.js":"10","C:\\Users\\ak\\Desktop\\NewProject\\src\\innerContent\\InnerContent.js":"11","C:\\Users\\ak\\Desktop\\NewProject\\src\\About.js":"12","C:\\Users\\ak\\Desktop\\NewProject\\src\\Header.js":"13","C:\\Users\\ak\\Desktop\\NewProject\\src\\CommentBox.js":"14","C:\\Users\\ak\\Desktop\\NewProject\\src\\PostUtilities.js":"15","C:\\Users\\ak\\Desktop\\NewProject\\src\\LoginSidebar.js":"16","C:\\Users\\ak\\Desktop\\NewProject\\src\\Cards.js":"17","C:\\Users\\ak\\Desktop\\NewProject\\src\\SearchLoading.js":"18","C:\\Users\\ak\\Desktop\\NewProject\\src\\AboutTab.js":"19","C:\\Users\\ak\\Desktop\\NewProject\\src\\NotificationContent.js":"20","C:\\Users\\ak\\Desktop\\NewProject\\src\\innerContent\\Comment.js":"21","C:\\Users\\ak\\Desktop\\NewProject\\src\\Poll.js":"22","C:\\Users\\ak\\Desktop\\NewProject\\src\\RecentComment.js":"23","C:\\Users\\ak\\Desktop\\NewProject\\src\\EditProfile.js":"24","C:\\Users\\ak\\Desktop\\NewProject\\src\\RegisterSec.js":"25","C:\\Users\\ak\\Desktop\\NewProject\\src\\LoginSec.js":"26","C:\\Users\\ak\\Desktop\\NewProject\\src\\PrivateRoute.js":"27"},{"size":517,"mtime":1616159937491,"results":"28","hashOfConfig":"29"},{"size":375,"mtime":1616159937491,"results":"30","hashOfConfig":"29"},{"size":3547,"mtime":1619279690924,"results":"31","hashOfConfig":"29"},{"size":616,"mtime":1616491748005,"results":"32","hashOfConfig":"29"},{"size":538,"mtime":1617548592485,"results":"33","hashOfConfig":"29"},{"size":5002,"mtime":1619422128344,"results":"34","hashOfConfig":"29"},{"size":3813,"mtime":1619416281217,"results":"35","hashOfConfig":"29"},{"size":2944,"mtime":1619422339016,"results":"36","hashOfConfig":"29"},{"size":2769,"mtime":1619200913813,"results":"37","hashOfConfig":"29"},{"size":1722,"mtime":1619157351223,"results":"38","hashOfConfig":"29"},{"size":16729,"mtime":1619361163781,"results":"39","hashOfConfig":"29"},{"size":7201,"mtime":1619418971436,"results":"40","hashOfConfig":"29"},{"size":235,"mtime":1619416657183,"results":"41","hashOfConfig":"29"},{"size":2797,"mtime":1619330743774,"results":"42","hashOfConfig":"29"},{"size":2992,"mtime":1619422300888,"results":"43","hashOfConfig":"29"},{"size":1070,"mtime":1619243987117,"results":"44","hashOfConfig":"29"},{"size":6866,"mtime":1619422402973,"results":"45","hashOfConfig":"29"},{"size":595,"mtime":1616159937483,"results":"46","hashOfConfig":"29"},{"size":538,"mtime":1619010545129,"results":"47","hashOfConfig":"29"},{"size":9121,"mtime":1619416112113,"results":"48","hashOfConfig":"29"},{"size":10865,"mtime":1619413892498,"results":"49","hashOfConfig":"29"},{"size":4293,"mtime":1618927449843,"results":"50","hashOfConfig":"29"},{"size":625,"mtime":1617125853589,"results":"51","hashOfConfig":"29"},{"size":9837,"mtime":1619418733698,"results":"52","hashOfConfig":"29"},{"size":11121,"mtime":1619282365126,"results":"53","hashOfConfig":"29"},{"size":10163,"mtime":1619282652570,"results":"54","hashOfConfig":"29"},{"size":526,"mtime":1618932290425,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"50l078",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"58"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"58"},"C:\\Users\\ak\\Desktop\\NewProject\\src\\index.js",[],["131","132"],"C:\\Users\\ak\\Desktop\\NewProject\\src\\reportWebVitals.js",[],"C:\\Users\\ak\\Desktop\\NewProject\\src\\App.js",["133"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Feed from \"./Feed\";\r\nimport Widgets from \"./Widgets\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport InnerContent from \"./innerContent/InnerContent\";\r\nimport Notification from \"./Notification\";\r\nimport Search from \"./Search\";\r\nimport Bookmark from \"./Bookmark\";\r\nimport About from \"./About\";\r\nimport { auth } from \"./firebase.js\";\r\nimport db from \"./firebase.js\";\r\nimport PrivateRoute from \"./PrivateRoute.js\";\r\nimport LoginSec from \"./LoginSec.js\";\r\nimport RegisterSec from \"./RegisterSec\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"./earth.json\";\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userData, setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setTimeout(\r\n      () =>\r\n        auth.onAuthStateChanged((user) => {\r\n          if (user) {\r\n            setLoading(true);\r\n            db.collection(\"userDetails\")\r\n              .doc(user.uid)\r\n              .get()\r\n              .then((d) => setUserData({ ...d.data(), id: d.id }))\r\n              .then(() => {\r\n                setLoading(false);\r\n                setLoggedIn(true);\r\n                console.log(userData);\r\n              });\r\n          } else {\r\n            setLoggedIn(false);\r\n            setLoading(false);\r\n          }\r\n        }),\r\n      3000\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {loading ? (\r\n       <div style={{display:\"flex\",flex:1,alignItems:\"center\",justifyContent:'center'}} >\r\n       <Lottie\r\n          options={{\r\n            loop: true,\r\n            autoplay: true,\r\n            animationData: animationData,\r\n            rendererSettings: {\r\n              preserveAspectRatio: \"xMidYMid slice\",\r\n            },\r\n          }}\r\n          height={\"50%\"}\r\n          width={\"50%\"}\r\n        />\r\n       </div>\r\n      ) : (\r\n        <Router>\r\n          {window.innerWidth > 1000 ? (\r\n            <Sidebar userData={userData} loggedIn={loggedIn} />\r\n          ) : null}\r\n          <Switch>\r\n            \r\n            <PrivateRoute path=\"/feed/:postId\" loggedIn={loggedIn}>\r\n              <InnerContent userData={userData} />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/notifications\" loggedIn={loggedIn}>\r\n              <Notification userId={userData.id} userData={userData} />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/search\" loggedIn={loggedIn}>\r\n              <Search />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/bookmarks\" loggedIn={loggedIn}>\r\n              <Bookmark />\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/about/:uid\" loggedIn={loggedIn}>\r\n              <About userId={userData.id}/>\r\n            </PrivateRoute>\r\n            <Route path=\"/register\">\r\n              <RegisterSec />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginSec />\r\n            </Route>\r\n            <Route path=\"/feed\">\r\n              <Feed />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Feed />\r\n            </Route>\r\n            \r\n          </Switch>\r\n          <Widgets />\r\n\r\n          <div className=\"app__bottom\">\r\n            {window.innerWidth <= 1000 ? (\r\n              <Sidebar userData={userData} loggedIn={loggedIn} />\r\n            ) : null}\r\n          </div>\r\n        </Router>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\firebase.js",["134"],"import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBn8-G9jAD5oj7kCQtOk-pLJzSlff6sMaA\",\r\n  authDomain: \"thewiseindia-8e9a9.firebaseapp.com\",\r\n  projectId: \"thewiseindia-8e9a9\",\r\n  storageBucket: \"thewiseindia-8e9a9.appspot.com\",\r\n  messagingSenderId: \"426221683873\",\r\n  appId: \"1:426221683873:web:521c91bd1aa23b92a71ce0\",\r\n  measurementId: \"G-ZVHXJMHTQ2\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","C:\\Users\\ak\\Desktop\\NewProject\\src\\Widgets.js",["135","136"],"import React from \"react\";\r\nimport \"./Widgets.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Header from './Header.js';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\n\r\nfunction Widgets() {\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className='header' >\r\n            <WhatshotIcon  fontSize={'large'} />\r\n            <p>Trending</p>\r\n        </div>\r\n      <div className=\"widgets__widgetContainer\">\r\n        <h2>What's happening</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;","C:\\Users\\ak\\Desktop\\NewProject\\src\\Feed.js",["137","138","139","140","141","142"],"C:\\Users\\ak\\Desktop\\NewProject\\src\\Sidebar.js",["143","144","145","146","147","148"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Header from \"./Header.js\";\r\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\r\nimport LoginSidebar from \"./LoginSidebar\";\r\nimport Badge from '@material-ui/core/Badge';\r\nimport db from './firebase.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Sidebar({userData,loggedIn}) {\r\n  const [user, setUser] = useState(userData);\r\n  const [notiCount, setNotiCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(user) getNotiCount();\r\n  }, [])\r\n\r\n  const  getNotiCount = () => {\r\n    db.collection(\"userDetails\").doc(user.id).collection('notifications').where(\"seen\",\"==\",false).onSnapshot((d)=>{\r\n      setNotiCount(d.docs.length);\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <img\r\n          src={\r\n            \"https://firebasestorage.googleapis.com/v0/b/thewiseindia-8e9a9.appspot.com/o/hand.png?alt=media&token=9b3e03f4-ba46-4918-aec0-60f619b2b2e0\"\r\n          }\r\n        />\r\n        <p>WiseIndia</p>\r\n      </div>\r\n\r\n      {!loggedIn ? null : (\r\n        <Link to={`/about/${user.id}`} >\r\n        <div className=\"sidebar__top\">\r\n          <img src={`${user.iconUrl}`} />\r\n          <div className=\"sidebar__topDetail\">\r\n            <p style={{ fontWeight: \"bold\", color: \"#2c4c4b\" }}>{user.name}</p>\r\n            <p style={{ fontSize: \"12px\", color: \"#c8d6d2\" }}>\r\n              @{user.userName}\r\n            </p>\r\n          </div>\r\n        </div>\r\n       </Link>\r\n      )}\r\n\r\n      <div className=\"sidebar__link\">\r\n        {!loggedIn ? (\r\n          <LoginSidebar />\r\n        ) : (\r\n          <>\r\n            <NavLink\r\n              to={\"/feed\"}\r\n              activeClassName=\"sidebar__linkActive\"\r\n              className=\"sidebar__linkInActive\"\r\n            >\r\n              <div className=\"link\">\r\n                <HomeIcon />\r\n                <p> Home</p>\r\n              </div>\r\n            </NavLink>\r\n            <NavLink\r\n              to={\"/search\"}\r\n              activeClassName=\"sidebar__linkActive\"\r\n              className=\"sidebar__linkInActive\"\r\n            >\r\n              <div className=\"link\">\r\n                <SearchIcon /> <p>Search</p>\r\n              </div>\r\n            </NavLink>\r\n            <NavLink\r\n              to={\"/notifications\"}\r\n              activeClassName=\"sidebar__linkActive\"\r\n              className=\"sidebar__linkInActive\"\r\n            >\r\n              <div className=\"link\">\r\n              <Badge badgeContent={notiCount}  max={9}  color=\"error\">\r\n                <NotificationsNoneIcon />\r\n                </Badge>\r\n                <p>Notification</p> \r\n              </div>\r\n            </NavLink>\r\n            <NavLink\r\n              to={\"/bookmarks\"}\r\n              activeClassName=\"sidebar__linkActive\"\r\n              className=\"sidebar__linkInActive\"\r\n            >\r\n              <div className=\"link\">\r\n                <BookmarkBorderIcon />\r\n                <p>Saved</p>\r\n              </div>\r\n            </NavLink>\r\n            <NavLink\r\n              to={`/about/${user.id}`}\r\n              activeClassName=\"sidebar__linkActive\"\r\n              className=\"sidebar__linkInActive\"\r\n            >\r\n              <div className=\"link\">\r\n                <PermIdentityIcon />\r\n                <p>Profile</p>\r\n              </div>\r\n            </NavLink>{\" \"}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Sidebar;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\Bookmark.js",["149","150","151"],"C:\\Users\\ak\\Desktop\\NewProject\\src\\Search.js",["152"],"import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AboutTab from \"./AboutTab\";\r\nimport SearchLoading from \"./SearchLoading\";\r\nimport db from \"./firebase\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport PageviewIcon from '@material-ui/icons/Pageview';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nexport default function Search() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const handleSearch = (e) => {\r\n    setInput(e.target.value);\r\n\r\n    if (input.trim().length) {\r\n      console.log(input, \"inside serach \");\r\n      setLoading(true);\r\n\r\n      let d = [];\r\n\r\n      db.collection(\"posts\")\r\n        .orderBy(\"headLineLower\")\r\n        .startAt(input.trim().toLowerCase())\r\n        .endAt(input.trim().toLowerCase() + \"\\uf8ff\")\r\n        .get()\r\n        .then((data) =>\r\n          data.docs.map((doc) => d.push({ ...doc.data(), uid: doc.id }))\r\n        )\r\n        .then(() => {\r\n          setPosts(d);\r\n          console.log(d);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className='main' >\r\n      <div className=\"search__header\">\r\n        <PageviewIcon fontSize={\"large\"} />\r\n        <p>Search</p>\r\n      </div>\r\n      <Zoom in={true}>\r\n      <div className=\"search\">\r\n        <div className=\"widgets__input\">\r\n          <SearchIcon className=\"widgets__searchIcon\" />\r\n          <input\r\n            onChange={(e) => handleSearch(e)}\r\n            placeholder=\"Search UnbiasedIndia\"\r\n            type=\"text\"\r\n            value={input}\r\n          />\r\n          <IconButton onClick={clearInput}>\r\n            <ClearIcon fontSize={\"small\"} />\r\n          </IconButton>\r\n        </div>\r\n        {!input.length ? (\r\n          <img  className='search__img' src=\"search.png\" />\r\n        ) : (\r\n          <div>\r\n            {loading ? (\r\n              <div>\r\n                <SearchLoading />\r\n                <SearchLoading />\r\n                <SearchLoading />\r\n                <SearchLoading />\r\n              </div>\r\n            ) : (\r\n              <div className='search__posts' >\r\n                {posts.map((post) => (\r\n                  <AboutTab\r\n                    search\r\n                    uid={post.uid}\r\n                    img={post.img}\r\n                    against={post.against}\r\n                    favour={post.favour}\r\n                    headLine={post.headLine}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      </Zoom>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\Notification.js",["153"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Notification.css\";\r\nimport Header from \"./Header.js\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport NotificationContent from \"./NotificationContent.js\";\r\nimport db from \"./firebase\";\r\n\r\nfunction Notification({ userId,userData }) {\r\n \r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getNotifications();\r\n  }, []);\r\n\r\n  const getNotifications = () => {\r\n    let noti = [];\r\n    setLoading(true);\r\n    db.collection(\"userDetails\")\r\n      .doc(userId)\r\n      .collection(\"notifications\")\r\n      .orderBy(\"timestamp\",\"desc\")\r\n      .onSnapshot((data) => {\r\n        data.docs.map((d) => noti.push(d.data()));\r\n        setNotifications(noti);\r\n        setLoading(false);\r\n        updateSeen();\r\n      });\r\n  };\r\n\r\n  const updateSeen = () => {\r\n\r\n    db.collection(\"userDetails\")\r\n      .doc(userId)\r\n      .collection(\"notifications\")\r\n      .where(\"seen\",\"==\",false)\r\n      .get()\r\n      .then((snapshot) => {\r\n        return Promise.all(snapshot.docs.map((doc) => {\r\n          return doc.ref.update({seen: true});\r\n        }));\r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"notification\">\r\n      <Header\r\n        text={\"Notifications\"}\r\n        icon={<NotificationsIcon fontSize={\"large\"} />}\r\n      />\r\n\r\n      {loading ? (\r\n        <h1>loading</h1>\r\n      ) : (\r\n        <div className=\"notification__body\">\r\n          {notifications.map((noti) => (\r\n            <NotificationContent data={noti} userId={userId} userData={userData}  />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\innerContent\\InnerContent.js",["154","155","156","157","158"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./InnerContent.css\";\r\nimport { makeStyles, IconButton } from \"@material-ui/core\";\r\nimport \"react-dropdown/style.css\";\r\nimport Poll from \"../Poll\";\r\nimport Comment from \"./Comment\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport PostUtilities from \"../PostUtilities.js\";\r\nimport db from \"../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport FlatList from \"flatlist-react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CommentBox from \"../CommentBox.js\";\r\nimport firebase from \"firebase\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst options = [\"Select opinion\", \"Favour\", \"Against\"];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hidden: {\r\n    display: \"-webkit-box\",\r\n    WebkitLineClamp: 4,\r\n    overflow: \"hidden\",\r\n    WebkitBoxOrient: \"vertical\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 150,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Comments = ({\r\n  userData,\r\n  item,\r\n  postId,\r\n  deleteComment,\r\n  handleClickAlert,\r\n  userId,\r\n  sendReport,\r\n  postIcon,\r\n  userIcon,\r\n}) => {\r\n  const [showReply, setShowReply] = useState(false);\r\n  const [replies, setReplies] = useState([]);\r\n  const [repliesLoading, setRepliesLoading] = useState(false);\r\n\r\n  console.log(item);\r\n\r\n  const loadReplies = async () => {\r\n    setRepliesLoading(true);\r\n    let data = await db\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(item.comUid)\r\n      .collection(\"replies\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .get();\r\n\r\n    let rp = [];\r\n    data.docs.map((doc) => rp.push({ ...doc.data(), repUid: doc.id }));\r\n    setReplies(rp);\r\n    console.log(\"=>>>>>>>>>>>>>>>>>>>>>replies\", rp);\r\n    setShowReply(true);\r\n    setRepliesLoading(false);\r\n  };\r\n\r\n  const getReplies = () => {\r\n    if (showReply) {\r\n      setShowReply(false);\r\n    } else {\r\n      loadReplies();\r\n    }\r\n  };\r\n\r\n  const postReply = (data, infavour, ref, replyName) => {\r\n    console.log(\"posting reply\", data, ref);\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(ref)\r\n      .collection(\"replies\")\r\n      .add({\r\n        text: `@${replyName}  ` + data,\r\n        like: [],\r\n        dislike: [],\r\n        infavour: infavour,\r\n        uid: userId,\r\n        name: userData.name,\r\n        userName: userData.userName,\r\n        icon: userData.iconUrl,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n      .then(() => {\r\n        loadReplies();\r\n      });\r\n  };\r\n\r\n  const deleteReply = (cmtId, postId, repId) => {\r\n    console.log(\"=>>>>>>>>>>>>>>deleting\", cmtId, postId, repId);\r\n    let cm = replies.filter((cmt) => cmt.repUid !== repId);\r\n    setReplies(cm);\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(cmtId)\r\n      .collection(\"replies\")\r\n      .doc(repId)\r\n      .delete()\r\n      .then(() => {\r\n        handleClickAlert(\"success\", \"Reply deleted...\");\r\n      });\r\n  };\r\n  const sendReplyReport = (text, cmtId, postId, repId) => {\r\n    if (text.length < 50) {\r\n      handleClickAlert(\"error\", \"Report text must be 50 characters long'...\");\r\n      return;\r\n    }\r\n    db.collection(\"CommentReports\")\r\n      .doc(postId)\r\n      .collection(\"report\")\r\n      .add({\r\n        text: text,\r\n        userId: userId,\r\n        commentId: cmtId,\r\n        replyId: repId,\r\n      })\r\n      .then(() => {\r\n        handleClickAlert(\"success\", \"Report submitted...\");\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <Comment\r\n        uid={item.comUid}\r\n        userData={userData}\r\n        text={item.text}\r\n        name={item.name}\r\n        userName={item.userName}\r\n        icon={item.icon}\r\n        like={item.like}\r\n        commentOwnerId={item.uid}\r\n        dislike={item.dislike}\r\n        postId={postId}\r\n        userId={userId}\r\n        userIcon={userIcon}\r\n        postIcon={postIcon}\r\n        postReply={postReply}\r\n        deleteComment={deleteComment}\r\n        sendReport={sendReport}\r\n      />\r\n      {item.repliesLen ? (\r\n        <div>\r\n          {repliesLoading ? (\r\n            <div className=\"comment__replyShowButton\">\r\n              <CircularProgress size={20} /> <p>Loading replies...</p>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"comment__replyShowButton\"\r\n              onClick={() => getReplies()}\r\n            >\r\n              {showReply ? (\r\n                <p>Hide replies</p>\r\n              ) : (\r\n                <p>View {item.repliesLen} replies</p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : null}\r\n\r\n      <Divider />\r\n      {showReply ? (\r\n        <div className=\"comment__replies\">\r\n          {replies.map((reply) => (\r\n            <Comment\r\n              reply={true}\r\n              userData={userData}\r\n              replyUid={reply.repUid}\r\n              uid={item.comUid}\r\n              text={reply.text}\r\n              name={reply.name}\r\n              userName={reply.userName}\r\n              icon={reply.icon}\r\n              userId={userId}\r\n              like={reply.like}\r\n              userIcon={userIcon}\r\n              commentOwnerId={reply.uid}\r\n              dislike={reply.dislike}\r\n              postId={postId}\r\n              postIcon={postIcon}\r\n              postReply={postReply}\r\n              deleteComment={deleteReply}\r\n              sendReport={sendReplyReport}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction InnerContent({ userData }) {\r\n  const [infavour, setInfavour] = useState(true);\r\n  const [data, setData] = useState({});\r\n  const { postId } = useParams();\r\n  const [isMore, setIsMore] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [commentLoading, setCommentLoading] = useState(true);\r\n  const [comments, setComments] = useState([]);\r\n  const [lastDoc, setLastDoc] = useState([]);\r\n  const [cmtLength, setCmtLength] = useState(0);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertType, setAlertType] = useState(\"error\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [cmtType, setCmtType] = React.useState(\"Total Opinions\");\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setCmtType(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleClickAlert = (type, message) => {\r\n    setAlertType(type);\r\n    setAlertMessage(message);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const handleCommentSupport = () => {\r\n    setInfavour(!infavour);\r\n  };\r\n\r\n  const getPostData = () => {\r\n    setLoading(true);\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .get()\r\n      .then((data) => {\r\n        setData(data.data());\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const filterComments = (data) => {\r\n    if (cmtType === \"Total Opinions\") return true;\r\n    else if (cmtType === \"In Favour\" && data.infavour) return true;\r\n    else if (cmtType === \"In Against\" && !data.infavour) return true;\r\n    else return false;\r\n  };\r\n\r\n  const getTotalCommentsLen =  async () => {\r\n    let ref = db\r\n    .collection(\"posts\")\r\n    .doc(postId)\r\n    .collection(\"comments\");\r\n\r\n    if (cmtType === \"Total Opinions\"){\r\n      const cmtlen = await ref.get();\r\n    setCmtLength(cmtlen.docs.length);\r\n    }\r\n    else if (cmtType === \"In Favour\"){\r\n      const cmtlen = await ref.where(\"infavour\",\"==\",true).get();\r\n    setCmtLength(cmtlen.docs.length);\r\n    }else{\r\n      const cmtlen = await ref.where(\"infavour\",\"==\",false).get();\r\n    setCmtLength(cmtlen.docs.length);\r\n    }\r\n\r\n  }\r\n\r\n  const getComments = async () => {\r\n    setCommentLoading(true);\r\n\r\n\r\n    const snapshot = await db\r\n      .collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .limit(10)\r\n      .get();\r\n\r\n    if (!snapshot.empty) {\r\n      let newComments = [];\r\n\r\n      setLastDoc(snapshot.docs[snapshot.docs.length - 1]);\r\n\r\n      for (let i = 0; i < snapshot.docs.length; i++) {\r\n        let rp = await db\r\n          .collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .doc(snapshot.docs[i].id)\r\n          .collection(\"replies\")\r\n          .get();\r\n        if (filterComments(snapshot.docs[i].data())) {\r\n          newComments.push({\r\n            ...snapshot.docs[i].data(),\r\n            comUid: snapshot.docs[i].id,\r\n            repliesLen: rp.docs.length,\r\n          });\r\n        }\r\n      }\r\n\r\n      setComments(newComments);\r\n      console.log(newComments);\r\n    } else {\r\n      setLastDoc(null);\r\n    }\r\n    setCommentLoading(false);\r\n  };\r\n\r\n  const getMoreComments = async () => {\r\n    if (lastDoc) {\r\n      setTimeout(async () => {\r\n        let snapshot = await db\r\n          .collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .orderBy(\"timestamp\", \"desc\")\r\n          .startAfter(lastDoc.data().timestamp)\r\n          .limit(10)\r\n          .get();\r\n\r\n        if (!snapshot.empty) {\r\n          let newComments = comments;\r\n\r\n          setLastDoc(snapshot.docs[snapshot.docs.length - 1]);\r\n\r\n          for (let i = 0; i < snapshot.docs.length; i++) {\r\n            let rp = await db\r\n              .collection(\"posts\")\r\n              .doc(postId)\r\n              .collection(\"comments\")\r\n              .doc(snapshot.docs[i].id)\r\n              .collection(\"replies\")\r\n              .get();\r\n\r\n            if (filterComments(snapshot.docs[i].data())) {\r\n              newComments.push({\r\n                ...snapshot.docs[i].data(),\r\n                comUid: snapshot.docs[i].id,\r\n                repliesLen: rp.docs.length,\r\n              });\r\n            }\r\n          }\r\n\r\n          setComments(newComments);\r\n          if (snapshot.docs.length < 4) setLastDoc(null);\r\n        } else {\r\n          setLastDoc(null);\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const postComment = (data, infavour, e) => {\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .add({\r\n        text: data,\r\n        like: [],\r\n        dislike: [],\r\n        infavour: infavour,\r\n        uid: userData.id,\r\n        name: userData.name,\r\n        userName: userData.userName,\r\n        icon: userData.iconUrl,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n      .then(() => getComments());\r\n  };\r\n\r\n  const deleteComment = (cmtId, postId) => {\r\n    let cm = comments.filter((cmt) => cmt.comUid !== cmtId);\r\n    setComments(cm);\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(cmtId)\r\n      .delete()\r\n      .then(() => {\r\n        handleClickAlert(\"success\", \"Comment deleted...\");\r\n      });\r\n  };\r\n\r\n  const sendReport = (text, cmtId, postId) => {\r\n    if (text.length < 50) {\r\n      handleClickAlert(\"error\", \"Report text must be 50 characters long'...\");\r\n      return;\r\n    }\r\n    db.collection(\"CommentReports\")\r\n      .doc(postId)\r\n      .collection(\"report\")\r\n      .add({\r\n        text: text,\r\n        userId: userData.id,\r\n        commentId: cmtId,\r\n      })\r\n      .then(() => {\r\n        handleClickAlert(\"success\", \"Report submitted...\");\r\n      });\r\n  };\r\n\r\n  const savePosts = () => {\r\n    db.collection(\"userDetails\")\r\n      .doc(userData.id)\r\n      .update({\r\n        savedPosts: firebase.firestore.FieldValue.arrayUnion(postId),\r\n      })\r\n      .then(() => {\r\n        handleClickAlert(\"success\", \"saved\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPostData();\r\n  }, []);\r\n  useEffect(() => {\r\n    getComments();\r\n    getTotalCommentsLen();\r\n  }, [cmtType]);\r\n\r\n  switch (loading) {\r\n    case false:\r\n      return (\r\n        <div className=\"innerContent__main\">\r\n          <div className=\"main__heading\">\r\n            <h1># {data.headLine}</h1>\r\n          </div>\r\n          <div className=\"innerContent__top\">\r\n            <div className=\"content\">\r\n              <img src={`${data.img}`}></img>\r\n            </div>\r\n\r\n            <div className=\"pollcss\">\r\n              <div className=\"pollcss__left\">\r\n                <Poll favour={data.favour} postId={postId} against={data.against} />\r\n              </div>\r\n              <PostUtilities\r\n                ismore={\r\n                  <div onClick={() => setIsMore(!isMore)}>\r\n                    <IconButton>\r\n                      {isMore ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                    </IconButton>\r\n                    {isMore ? <p>Less </p> : <p>More </p>}\r\n                  </div>\r\n                }\r\n                cmtLength={cmtLength}\r\n                savePost={savePosts}\r\n              />\r\n            </div>\r\n\r\n            {isMore ? (\r\n              <p className=\"main__para\"> {data.description} </p>\r\n            ) : (\r\n              <p className=\"main__para\">\r\n                {data.description.slice(0, 200)}.....\r\n              </p>\r\n            )}\r\n\r\n            <Divider />\r\n            <div className=\"comment__top\">\r\n              <h2>{cmtLength} Total opinions {cmtType !== \"Total Opinions\" ? cmtType : \"\"} </h2>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Total{\" \"}\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={cmtType}\r\n                  onChange={handleChange}\r\n                  label=\"Age\"\r\n                >\r\n                  <MenuItem value=\"Total Opinions\">\r\n                    <em>Total Opinions</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"In Favour\"}>In Favour</MenuItem>\r\n                  <MenuItem value={\"In Against\"}>In Against</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <CommentBox postComment={postComment} userIcon={userData.iconUrl} />\r\n            <Divider />\r\n            {commentLoading ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"15px\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <FlatList\r\n                list={comments}\r\n                renderItem={(item) => (\r\n                  <Comments\r\n                    userData={userData}\r\n                    postIcon={data.img}\r\n                    item={item}\r\n                    userIcon={userData.iconUrl}\r\n                    userId={userData.id}\r\n                    postId={postId}\r\n                    handleClickAlert={handleClickAlert}\r\n                    deleteComment={deleteComment}\r\n                    sendReport={sendReport}\r\n                  />\r\n                )}\r\n                hasMoreItems={lastDoc !== null ? true : false}\r\n                loadMoreItems={getMoreComments}\r\n                paginationLoadingIndicator={\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flex: 1,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                  >\r\n                    <CircularProgress />\r\n                  </div>\r\n                }\r\n                renderWhenEmpty={() => <div></div>}\r\n              />\r\n            )}\r\n          </div>\r\n          <Snackbar\r\n            open={openAlert}\r\n            autoHideDuration={3000}\r\n            onClose={handleCloseAlert}\r\n          >\r\n            <Alert onClose={handleCloseAlert} severity={alertType}>\r\n              {alertMessage}\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div className=\"main__loading\">\r\n          {\" \"}\r\n          <CircularProgress />{\" \"}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default InnerContent;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\About.js",["159","160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./About.css\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FlatList from \"flatlist-react\";\r\nimport Header from \"./Header.js\";\r\nimport AboutTab from \"./AboutTab\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Button } from \"@material-ui/core\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport db from \"./firebase.js\";\r\nimport {auth} from \"./firebase.js\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Redirect } from 'react-router'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function About({userId}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [userData, setUserData] = useState({});\r\n  const [likedPosts, setLikedPosts] = useState([]);\r\n  const [dislikedPosts, setDislikesPosts] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const { uid } = useParams();\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n    getLikedPosts();\r\n    getDislikedPosts();\r\n  }, [uid]);\r\n\r\n  const getUserData = () => {\r\n    setLoading(true);\r\n    db.collection(\"userDetails\")\r\n      .doc(uid)\r\n      .get()\r\n      .then((data) => setUserData(data.data()))\r\n      .then(() => setLoading(false));\r\n  };\r\n\r\n  const getLikedPosts = () => {\r\n    let p = [];\r\n    db.collection(\"posts\")\r\n      .where(\"favour\", \"array-contains\", uid)\r\n      .get()\r\n      .then((data) => data.docs.map((d) => p.push({ ...d.data(), uid: d.id })))\r\n      .then(() => setLikedPosts(p));\r\n  };\r\n\r\n  const getDislikedPosts = () => {\r\n    let p = [];\r\n    db.collection(\"posts\")\r\n      .where(\"against\", \"array-contains\", uid)\r\n      .get()\r\n      .then((data) => data.docs.map((d) => p.push({ ...d.data(), uid: d.id })))\r\n      .then(() => setDislikesPosts(p));\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const signOut = () => {\r\n    auth.signOut();\r\n    setRedirect(true);\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to='/feed'/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"about\">\r\n      <Header icon={<AccountBoxIcon fontSize={\"large\"} />} text={\"Profile\"} />\r\n\r\n      {loading ? (\r\n       <LinearProgress />\r\n      ) : (\r\n        <div className=\"about__body\">\r\n          <div\r\n            style={{\r\n              backgroundImage: \"url(\" + \"/farmer.jpg\" + \")\",\r\n              width: \"100%\",\r\n              height: \"250px\",\r\n              backgroundPosition: \"center top\",\r\n              backgroundSize: \"cover\",\r\n              backgroundRepeat: \"no-repeat\",\r\n            }}\r\n          >\r\n            <div className=\"profile__image\">\r\n              <div className=\"profile__image__name\">\r\n                {/* <img\r\n                  className=\"profile__image__icon\"\r\n                  src={`${userData.iconUrl}`}\r\n                ></img> */}\r\n                <Avatar alt=\"Profile Icon\"   src={`${userData.iconUrl}`} />\r\n                <span className=\"about__username\">{userData.name}</span>\r\n                <span className=\"username__user\">@{userData.userName}</span>\r\n              </div>\r\n             \r\n              \r\n              <div className=\"profile__image__edit\">\r\n               <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  onClick={signOut}\r\n                  className={classes.button}\r\n                  startIcon={<ExitToAppIcon />}\r\n                >\r\n                  LogOUt\r\n                </Button> \r\n                {userId === uid ? \r\n                \r\n                  <EditProfile userData={userData} reload={getUserData} />\r\n                  : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"about__bio\" >\r\n              <p style={{ fontSize: \"15px\", color: \"#c8d6d2\" }} >{userData.bio}</p>\r\n              </div>\r\n          </div>\r\n          <div className={classes.root} style={{ marginTop: \"200px\" }}>\r\n            <AppBar\r\n              position=\"sticky\"\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                boxShadow: \"none\",\r\n                position: \"static\",\r\n              }}\r\n            >\r\n              <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"simple tabs example\"\r\n                variant=\"fullWidth\"\r\n                indicatorColor=\"primary\"\r\n                selectionFollowsFocus\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  color: \"black\",\r\n                }}\r\n              >\r\n                <Tab label=\"In Favour\" {...a11yProps(0)} />\r\n                <Tab label=\"In Against\" {...a11yProps(1)} />\r\n              </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n              <FlatList\r\n                list={likedPosts}\r\n                renderItem={(item) => (\r\n                  <AboutTab\r\n                    uid={item.uid}\r\n                    headLine={item.headLine}\r\n                    img={item.img}\r\n                    favour={item.favour}\r\n                    against={item.against}\r\n                  />\r\n                )}\r\n                renderWhenEmpty={() => <div>List is empty!</div>}\r\n              />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <FlatList\r\n                list={dislikedPosts}\r\n                renderItem={(item) => (\r\n                  <AboutTab\r\n                    uid={item.uid}\r\n                    headLine={item.headLine}\r\n                    img={item.img}\r\n                    favour={item.favour}\r\n                    against={item.against}\r\n                  />\r\n                )}\r\n                renderWhenEmpty={() => <div></div>}\r\n              />\r\n            </TabPanel>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\Header.js",[],"C:\\Users\\ak\\Desktop\\NewProject\\src\\CommentBox.js",["163","164"],"import React, { useState } from \"react\";\r\nimport \"./commentbox.css\";\r\nimport { Button, makeStyles, IconButton } from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  hidden: {\r\n    display: \"-webkit-box\",\r\n    WebkitLineClamp: 4,\r\n    overflow: \"hidden\",\r\n    WebkitBoxOrient: \"vertical\",\r\n  },\r\n}));\r\n\r\nfunction CommentBox({ postComment, docRef, replyName, setReplyInput, notify, userIcon }) {\r\n  const classes = useStyles();\r\n  const [infavour, setInfavour] = useState(true);\r\n  const [input, setInput] = useState(\"\");\r\n  const inputplaceholder = !!docRef\r\n    ? `replying to ${replyName}...`\r\n    : infavour\r\n    ? \"Write your opinion in favour...\"\r\n    : \"Write your opinion in against...\";\r\n\r\n  const handleCommentSupport = () => {\r\n    setInfavour(!infavour);\r\n  };\r\n\r\n  const sendComment = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim().length) {\r\n      if (typeof docRef === \"undefined\") postComment(input.trim(), infavour, e);\r\n      else {\r\n        postComment(input.trim(), infavour, docRef, replyName);\r\n        setReplyInput(false);\r\n        notify(\"replied\");\r\n      }\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"commentbox\" onSubmit={sendComment}>\r\n        <Avatar\r\n          style={{ marginLeft: \"15px\", marginTop: \"17px\" }}\r\n          src={`${userIcon}`}\r\n        ></Avatar>\r\n        <TextField\r\n          className=\"commentbox__input\"\r\n          style={{\r\n            borderBottom: infavour ? \"3px solid green\" : \"3px solid red\",\r\n          }}\r\n          placeholder={inputplaceholder}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n          rowsMax={4}\r\n          label={inputplaceholder}\r\n          multiline\r\n        />\r\n        {!!docRef ? null : (\r\n          <div\r\n            onClick={() => handleCommentSupport()}\r\n            className=\"commentbox__thumb\"\r\n          >\r\n            <IconButton>\r\n              {infavour ? <ThumbUpAltIcon /> : <ThumbDownIcon />}\r\n            </IconButton>\r\n            <p>{infavour ? <text>In Favour</text> : <text>In Against</text>}</p>\r\n          </div>\r\n        )}\r\n        <div\r\n          style={{\r\n            backgroundColor: \"#0284fe\",\r\n            borderRadius: \"10px\",\r\n            height: \"50px\",\r\n            width: \"50px\",\r\n          }}\r\n        >\r\n          <IconButton onClick={sendComment}>\r\n            <SendIcon style={{ color: \"white\" }} />\r\n          </IconButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentBox;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\PostUtilities.js",["165","166"],"C:\\Users\\ak\\Desktop\\NewProject\\src\\LoginSidebar.js",["167","168","169","170","171"],"import React, { useState } from \"react\";\r\nimport LoginSec from \"./LoginSec\";\r\nimport RegisterSec from \"./RegisterSec\";\r\nimport \"./LoginSidebar.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LoginSidebar() {\r\n  const classes = useStyles();\r\n  const [login, setLogin] = useState(false);\r\n  return (\r\n    <div className=\"login__button\">\r\n     \r\n      <Link to={\"/login\"} >\r\n        <Button variant=\"contained\"  style={{borderRadius:'10px',backgroundColor:\"#2381db\",color:\"#FFF\"}} >\r\n          Login\r\n        </Button>\r\n        </Link>\r\n\r\n        <p>or </p>\r\n\r\n        <Link to={\"/register\"} >\r\n        <Button variant=\"contained\"   style={{borderRadius:'10px',backgroundColor:\"#2381db\",color:\"#FFF\"}} >\r\n          Register\r\n        </Button>\r\n        </Link>\r\n        \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginSidebar;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\Cards.js",["172","173"],"C:\\Users\\ak\\Desktop\\NewProject\\src\\SearchLoading.js",[],"C:\\Users\\ak\\Desktop\\NewProject\\src\\AboutTab.js",["174"],"import React from \"react\";\r\nimport \"./AboutTab.css\";\r\nimport Poll from \"./Poll\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AboutTab({  uid, headLine, img, favour, against }) {\r\n  return (\r\n    <Link to={`/feed/${uid}`}>\r\n      <div className=\"about__tab\">\r\n        \r\n        <div className=\"innerpara\">\r\n\r\n        <img src={`${img}`}></img>\r\n\r\n          <h2># {headLine.slice(0,50)}...</h2>\r\n\r\n        </div>\r\n        <Poll favour={favour} against={against} />\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default AboutTab;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\NotificationContent.js",["175","176","177","178","179","180","181","182","183"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport \"./NotificationContent.css\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport db from \"./firebase.js\";\r\nimport Comment from \"./innerContent/Comment.js\";\r\nimport firebase from \"firebase\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Redirect } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {Link } from 'react-router-dom'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction NotificationContent({ data, userId, userData }) {\r\n  const classes = useStyles();\r\n  const [color, setColor] = useState(\"rgba(255,255,255,1)\");\r\n  const [open, setOpen] = useState(false);\r\n  const [mainComment, setMainComment] = useState({});\r\n  const [replies, setReplies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertType, setAlertType] = useState(\"error\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const marginH = window.innerWidth <= 1000 ? \"0%\" : \"25%\";\r\n\r\n  const handleClickAlert = (type, message) => {\r\n    setAlertType(type);\r\n    setAlertMessage(message);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n  const setBgColor = () => {\r\n    if (data.type == \"like\" || data.type == \"dislike\")\r\n      setColor(\"rgba(255, 0, 0, 1)\");\r\n    else if (data.type == \"replied\") setColor(\"rgba(125, 134, 248, 1)\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setBgColor();\r\n    console.log(\"=>>>>>>>>>>>>inside\", new Date(data.timestamp?.toDate()).toLocaleDateString());\r\n  }, []);\r\n\r\n  const Icon = () => {\r\n    if (data.type == \"like\" || data.type == \"dislike\")\r\n      return <FavoriteIcon color=\"secondary\" />;\r\n    else return <QuestionAnswerIcon color=\"primary\" />;\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    getComment();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getComment = async () => {\r\n    setLoading(true);\r\n\r\n    let mainCmt = await db\r\n      .collection(\"posts\")\r\n      .doc(data.postId)\r\n      .collection(\"comments\")\r\n      .doc(data.cmtId)\r\n      .get();\r\n\r\n    let reply = await db\r\n      .collection(\"posts\")\r\n      .doc(data.postId)\r\n      .collection(\"comments\")\r\n      .doc(data.cmtId)\r\n      .collection(\"replies\")\r\n      .get();\r\n\r\n    let rp = [];\r\n    reply.docs.map((d) => rp.push({ ...d.data(), repUid: d.id }));\r\n\r\n    console.log(\"=>>>>>>>>\", !!mainCmt.data());\r\n\r\n    if (!!mainCmt.data()) \r\n    {\r\n      setMainComment(mainCmt.data());\r\n      setReplies(rp);\r\n      setLoading(false);\r\n    }\r\n    else setRedirect(true);\r\n  };\r\n\r\n  const postReply = (text,infavour, ref, replyName) => {\r\n    console.log(\"posting reply\", text, data.postId, data.cmtId);\r\n    db.collection(\"posts\")\r\n      .doc(data.postId)\r\n      .collection(\"comments\")\r\n      .doc(data.cmtId)\r\n      .collection(\"replies\")\r\n      .add({\r\n        text: `@${replyName}  ` + text,\r\n        like: [],\r\n        dislike: [],\r\n        infavour:infavour,\r\n        uid: userData.id,\r\n        name: userData.name,\r\n        userName: userData.userName,\r\n        icon: userData.iconUrl,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n      .then(() => {\r\n        getComment();\r\n      });\r\n  };\r\n\r\n  const deleteReply = (cmtId, postId, repId) => {\r\n    console.log(\"=>>>>>>>>>>>>>>deleting\", cmtId, postId, repId);\r\n    let delRef = !!repId\r\n      ? db\r\n          .collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .doc(cmtId)\r\n          .collection(\"replies\")\r\n          .doc(repId)\r\n      : db.collection(\"posts\").doc(postId).collection(\"comments\").doc(cmtId);\r\n\r\n    let cm = replies.filter((cmt) => cmt.repUid !== repId);\r\n    setReplies(cm);\r\n\r\n    delRef.delete().then(() => {\r\n      handleClickAlert(\"success\", \"Reply deleted...\");\r\n      handleClose();\r\n    });\r\n  };\r\n\r\n  const sendReport = (text, cmtId, postId, repId) => {\r\n    let rep_Id = !!repId ? repId : \"\";\r\n\r\n    if (text.length < 50) {\r\n      handleClickAlert(\"error\", \"Report text must be 50 characters long'...\");\r\n      return;\r\n    }\r\n    db.collection(\"CommentReports\")\r\n      .doc(postId)\r\n      .collection(\"report\")\r\n      .add({\r\n        text: text,\r\n        userId: userId,\r\n        commentId: cmtId,\r\n        replyId: rep_Id,\r\n      })\r\n      .then(() => {\r\n        handleClickAlert(\"success\", \"Report submitted...\");\r\n      });\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to={`/feed/${data.postId}`} />;\r\n  }\r\n\r\n  return (\r\n    <Zoom in={true} >\r\n    <div className=\"notification__content\">\r\n      <div  className=\"notification__contentBody\">\r\n      <Link to={`/about/${data.userId}`} >\r\n        <div className=\"notification__contentIcon\">\r\n          <img\r\n            className=\"notification__contentIconImage\"\r\n            src={`${data.iconUrl}`}\r\n          />\r\n          <div className=\"overlay\">\r\n            <Icon />\r\n          </div>\r\n        </div>\r\n        </Link>\r\n        <p onClick={handleClickOpen} >\r\n          <span className=\"notification__username\">@{data.userName +\"  \"}</span>\r\n          <span style={{ color: color }}>{data.type+\"  \"}</span>\r\n          <span className=\"notification__username\">\r\n            your opinion on Farmer's protest\r\n          </span>\r\n        </p>\r\n        <span className=\"notification__time\">{new Date(data.timestamp?.toDate()).toDateString()}</span>\r\n        <Link to={`/feed/${data.postId}`} > \r\n        <span className=\"notification__img\">\r\n        <img src={`${data.postIcon}`}></img>\r\n        </span>\r\n        </Link> \r\n      </div>\r\n      <Dialog\r\n        style={{ margin: ` 0% ${marginH} ` }}\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ padding: \"10px 2px\" }}>\r\n          <Button onClick={handleClose} color=\"#263238\">\r\n            <ArrowBackIcon />\r\n          </Button>\r\n          Replies\r\n        </DialogTitle>\r\n        <div className=\"notification__contentDialog\">\r\n          {loading ? (\r\n            <LinearProgress />\r\n          ) : (\r\n            <>\r\n              <Comment\r\n                uid={data.cmtId}\r\n                text={mainComment.text}\r\n                name={mainComment.name}\r\n                userName={mainComment.userName}\r\n                icon={mainComment.icon}\r\n                like={mainComment.like}\r\n                commentOwnerId={mainComment.uid}\r\n                dislike={mainComment.dislike}\r\n                postId={data.postId}\r\n                userData={userData}\r\n                postIcon={data.postIcon}\r\n                postReply={postReply}\r\n                userId={userId}\r\n                deleteComment={deleteReply}\r\n                sendReport={sendReport}\r\n              />\r\n\r\n              <div className=\"notification__contentDialogReply\">\r\n                {replies.map((rep) => (\r\n                  <Comment\r\n                    uid={data.cmtId}\r\n                    reply={true}\r\n                    replyUid={rep.repUid}\r\n                    text={rep.text}\r\n                    name={rep.name}\r\n                    userName={rep.userName}\r\n                    icon={rep.icon}\r\n                    like={rep.like}\r\n                    commentOwnerId={rep.uid}\r\n                    dislike={rep.dislike}\r\n                    postId={data.postId}\r\n                    userData={userData}\r\n                    postIcon={data.postIcon}\r\n                    postReply={postReply}\r\n                    userId={userId}\r\n                    deleteComment={deleteReply}\r\n                    sendReport={sendReport}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Dialog>\r\n      <Snackbar\r\n        open={openAlert}\r\n        autoHideDuration={1000}\r\n        onClose={handleCloseAlert}\r\n      >\r\n        <Alert onClose={handleCloseAlert} severity={alertType}>\r\n          {alertMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nexport default NotificationContent;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\innerContent\\Comment.js",["184","185"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Comment.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport ThumbDownAltOutlinedIcon from \"@material-ui/icons/ThumbDownAltOutlined\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport db from \"../firebase\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport CommentBox from \"../CommentBox.js\";\r\nimport firebase from \"firebase\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReportIcon from \"@material-ui/icons/Report\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport {auth} from \"../firebase\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link } from 'react-router-dom'\r\n\r\n\r\nconst ITEM_HEIGHT = 50;\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nfunction Comment({\r\n  uid,\r\n  text,\r\n  name,\r\n  userData,\r\n  userName,\r\n  icon,\r\n  like,\r\n  dislike,\r\n  userId,\r\n  reply,\r\n  postId,\r\n  postIcon,\r\n  replyUid,\r\n  userIcon,\r\n  postReply,\r\n  commentOwnerId,\r\n  deleteComment,\r\n  sendReport\r\n}) {\r\n  const [likes, setLikes] = useState(typeof like !== \"undefined\" ? like : []);\r\n  const [dislikes, setDisLikes] = useState(\r\n    typeof dislike !== \"undefined\" ? dislike : []\r\n  );\r\n  const [iconUrl, setIconUrl] = useState(icon);\r\n  const [replyInput, setReplyInput] = useState(false);\r\n  const commentRef = reply\r\n    ? db\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .doc(uid)\r\n        .collection(\"replies\")\r\n        .doc(replyUid)\r\n    : db.collection(\"posts\").doc(postId).collection(\"comments\").doc(uid);\r\n\r\n    const [openCommentDilaog, setOpenCommentDilaog] = React.useState(false);\r\n    const [openReport, setOpenReport] = React.useState(false);\r\n    const [reportText, setReportText] = useState(\"\");\r\n\r\n  const commentDilaoghandleClickOpen = () => {\r\n    setOpenCommentDilaog(true);\r\n  };\r\n\r\n  const commentDilaoghandleClose = () => {\r\n    setOpenCommentDilaog(false);\r\n  };\r\n  const handleClickOpenReport = () => {\r\n    setOpenReport(true);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCloseReport = () => {\r\n    setOpenReport(false);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const pressLike = () => {\r\n    console.log(\"=>>>>>>>>>>>>>>>>>\", postId, uid,userId,userData);\r\n    let l = [...likes];\r\n    if (dislikes.includes(userId)) {\r\n      pressDislike();\r\n    }\r\n    if (likes.includes(userId)) {\r\n      l = l.filter((lk) => lk !== userId);\r\n      setLikes(l);\r\n    } else {\r\n      l.push(userId);\r\n      setLikes(l);\r\n    }\r\n\r\n    commentRef\r\n      .update({\r\n        like: firebase.firestore.FieldValue.arrayUnion(userId)\r\n      })\r\n      .then(() => notify(\"like\"));\r\n  };\r\n\r\n  const pressDislike = () => {\r\n    let l = [...dislikes];\r\n    if (likes.includes(userId)) pressLike();\r\n    if (dislikes.includes(userId)) {\r\n      l = l.filter((dl) => dl !== userId);\r\n      setDisLikes(l);\r\n    } else {\r\n      l.push(userId);\r\n      setDisLikes(l);\r\n    }\r\n    commentRef\r\n      .update({\r\n        dislike: firebase.firestore.FieldValue.arrayRemove(userId)\r\n      })\r\n      .then(() => notify(\"dislike\"));\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n const delcmt = () => {\r\n   if(reply) deleteComment(uid,postId,replyUid);\r\n   else deleteComment(uid,postId);\r\n   setAnchorEl(null);\r\n   commentDilaoghandleClose();\r\n }\r\n\r\n const updateReport = () => {\r\n  if(reply) sendReport(reportText,uid,postId,replyUid);\r\n  else sendReport(reportText,uid,postId)\r\n   handleCloseReport();\r\n }\r\n\r\n const notify = (type) => {\r\n\r\n   if(userId !== commentOwnerId){\r\n    db.collection(\"userDetails\").doc(commentOwnerId).collection(\"notifications\").add({\r\n      cmtId:uid,\r\n      postId:postId,\r\n      seen:false,\r\n      type:type,\r\n      userName:userData.userName,\r\n      userId:userData.id,\r\n      postIcon:postIcon,\r\n      iconUrl:userData.iconUrl,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n   }\r\n\r\n }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"comment1\">\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div style={{ display: \"flex\", margin: \"2px\" }}>\r\n          <Link to={`/about/${commentOwnerId}`} >\r\n            <Avatar\r\n              src={`${iconUrl}`}\r\n              style={{ marginTop: \"5px\", marginRight: \"10px\" }}\r\n            ></Avatar> </Link>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"#f0f2f5\",\r\n                borderRadius: \"20px\",\r\n                display: \"inline-block\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              <div className=\"comment__header\">\r\n              <Link to={`/about/${commentOwnerId}`} >\r\n                <div className=\"comment__headerText\">\r\n                  <h3>\r\n                    {name}\r\n                    <span className=\"comment__headerSpecial\">\r\n                      {\" \"}\r\n                      @{userName}{\" \"}\r\n                    </span>\r\n                  </h3>\r\n                </div>\r\n                </Link>\r\n              </div>\r\n              <div className=\"comment__headerDescription\">\r\n                <p>{text}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5,\r\n                width: \"20ch\",\r\n              },\r\n            }}\r\n          >\r\n          {auth.currentUser.uid === commentOwnerId ? <MenuItem onClick={commentDilaoghandleClickOpen}>\r\n          <ListItemIcon>\r\n            <DeleteOutlineIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\">Delete </Typography>\r\n        </MenuItem>\r\n        : null}\r\n        <MenuItem onClick={handleClickOpenReport}>\r\n          <ListItemIcon>\r\n            <ReportIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <Typography variant=\"inherit\">Report </Typography>\r\n        </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div className=\"comment__body\">\r\n          <div className=\"comment_footer\">\r\n            <div className=\"comment__footerDiv\" onClick={pressLike}>\r\n              <IconButton>\r\n                {likes.includes(userId) ? (\r\n                  <ThumbUpIcon fontSize=\"small\" style={{ color: \"#0284fe\" }} />\r\n                ) : (\r\n                  <ThumbUpAltOutlinedIcon fontSize=\"small\" />\r\n                )}\r\n              </IconButton>\r\n              <p>{likes.length} </p>\r\n            </div>\r\n            <div className=\"comment__footerDiv\" onClick={pressDislike}>\r\n              <IconButton>\r\n                {dislikes.includes(userId) ? (\r\n                  <ThumbDownIcon\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"#0284fe\" }}\r\n                  />\r\n                ) : (\r\n                  <ThumbDownAltOutlinedIcon fontSize=\"small\" />\r\n                )}\r\n              </IconButton>\r\n              <p>{dislikes.length} </p>\r\n            </div>\r\n            <div\r\n              className=\"comment__footerDiv\"\r\n              onClick={() => setReplyInput(!replyInput)}\r\n            >\r\n              <p>reply</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"85%\",\r\n          marginLeft: \"50px\",\r\n        }}\r\n      >\r\n        {replyInput ? (\r\n          <CommentBox\r\n            postComment={postReply}\r\n            notify={notify}\r\n            docRef={uid}\r\n            replyName={userName}\r\n            userIcon={userData.iconUrl}\r\n            setReplyInput={setReplyInput}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <Dialog\r\n        open={openCommentDilaog}\r\n        onClose={commentDilaoghandleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          {reply? 'Delete Reply' :'Delete Comment' }\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to delete this {reply? 'Reply' :'Comment' }?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={commentDilaoghandleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={delcmt} color=\"primary\">\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog open={openReport} onClose={handleCloseReport} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Report</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter what you have found suspicious about this {reply? 'Reply' :'Comment' }.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            onChange={(e)=>setReportText(e.target.value)}\r\n            id=\"name\"\r\n            label=\"Report\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseReport} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={updateReport} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;","C:\\Users\\ak\\Desktop\\NewProject\\src\\Poll.js",["186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Poll.css\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUpOutlinedIcon from \"@material-ui/icons/ThumbUpOutlined\";\r\nimport ThumbDownAltOutlinedIcon from \"@material-ui/icons/ThumbDownAltOutlined\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { auth } from \"./firebase.js\";\r\nimport db from \"./firebase.js\";\r\nimport {  BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\r\n\r\nexport default function Poll({ favour, against, postId,alert }) {\r\n  const [like, setLike] = useState(!!favour ? favour : []);\r\n  const [dislike, setDisLike] = useState(!!against ? against : []);\r\n\r\n  const uid = auth.currentUser !== null ? auth.currentUser.uid : \"\";\r\n\r\n  const [fav, setFav] = useState(\r\n    parseFloat(like.length / (like.length + dislike.length)).toFixed(2)\r\n  );\r\n  const [ag, setAg] = useState(\r\n    parseFloat(dislike.length / (like.length + dislike.length)).toFixed(2)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setFav(parseFloat(like.length / (like.length + dislike.length)).toFixed(2));\r\n    setAg(\r\n      parseFloat(dislike.length / (like.length + dislike.length)).toFixed(2)\r\n    );\r\n  }, [like, dislike]);\r\n\r\n  const updateLike = () => {\r\n    console.log(postId, like);\r\n    let l = [...like];\r\n\r\n    if(!uid){\r\n      alert(\"info\",\"Login to website...\");\r\n      <Redirect to=\"/search\" />\r\n      return;\r\n    }\r\n\r\n    if (dislike.includes(uid)) {\r\n      updateDislike();\r\n    }\r\n    if (like.includes(uid)) {\r\n      l = l.filter((lk) => lk !== uid);\r\n      setLike(l);\r\n    } else {\r\n      l.push(uid);\r\n      setLike(l);\r\n    }\r\n\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .update({\r\n        favour: l,\r\n      })\r\n      .then(() => console.log(\"like updated\"));\r\n  };\r\n\r\n  const updateDislike = () => {\r\n    let l = [...dislike];\r\n    if(!uid){\r\n      alert(\"info\",\"Login to website...\");\r\n      return;\r\n    }\r\n    if (like.includes(uid)) updateLike();\r\n    if (dislike.includes(uid)) {\r\n      l = l.filter((dl) => dl !== uid);\r\n      setDisLike(l);\r\n    } else {\r\n      l.push(uid);\r\n      setDisLike(l);\r\n    }\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .update({\r\n        against: l,\r\n      })\r\n      .then(() => console.log(\"dislikes updated\"));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"poll\">\r\n      <div\r\n        className=\"poll__left\"\r\n        style={{\r\n          borderRight: \"none\",\r\n          flex: `${fav}`,\r\n          borderColor: \"#4bd97e\",\r\n          borderWidth: \"2px\",\r\n          borderTopLeftRadius: \"10px\",\r\n          borderBottomLeftRadius: \"10px\",\r\n        }}\r\n      >\r\n        <div className=\"poll__leftSection\">\r\n          <IconButton onClick={updateLike}>\r\n            {like.includes(uid) ? (\r\n              <ThumbUpAltIcon style={{ fontSize: \"20px\", color: \"#4bd97e\" }} />\r\n            ) : (\r\n              <ThumbUpOutlinedIcon style={{ fontSize: \"20px\" }} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"poll__line\">\r\n          <p style={{ color: \"color: #323435;\" }}>\r\n            {parseFloat(fav * 100).toFixed(0)}%\r\n          </p>\r\n          <p className=\"poll__linePara\" style={{ borderColor: \"#4bd97e\" }}>\r\n            {like.length} Votes\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"poll__right\"\r\n        style={{\r\n          borderLeft: \"none\",\r\n          flex: `${ag}`,\r\n          borderColor: \"#ff0000\",\r\n          borderWidth: \"2px\",\r\n          borderTopRightRadius: \"10px\",\r\n          borderBottomRightRadius: \"10px\",\r\n        }}\r\n      >\r\n        <div className=\"poll__line\">\r\n          <p style={{ color: \"color: #323435;\" }}>{ag * 100}%</p>\r\n          <p className=\"poll__linePara\" style={{ borderColor: \"#ff0000\" }}>\r\n            {dislike.length} Vote{\" \"}\r\n          </p>\r\n        </div>\r\n        <div className=\"poll__leftSection\">\r\n          <IconButton onClick={updateDislike}>\r\n            {dislike.includes(uid) ? (\r\n              <ThumbDownIcon style={{ fontSize: \"20px\", color: \"#FF0000\" }} />\r\n            ) : (\r\n              <ThumbDownAltOutlinedIcon style={{ fontSize: \"20px\" }} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\RecentComment.js",["188"],"import React from 'react'\r\nimport './RecentComment.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction RecentComment() {\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n          <Link to={`/feed/1236`}>\r\n            <div className=\"about__tab\">\r\n        <img src=\"farmer.jpg\"></img>\r\n\r\n        <div className=\"innerpara\">\r\n          <h2>2020–2021 Indian farmers' protest</h2>\r\n          \r\n\r\n          <p>\r\n          Your Comment: I totally agree with farmer protest. count me in the protest\r\n          </p>\r\n        </div>\r\n        \r\n      </div>\r\n      </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecentComment",["189","190"],"C:\\Users\\ak\\Desktop\\NewProject\\src\\EditProfile.js",["191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport \"./EditProfile.css\";\r\nimport AddAPhotoOutlinedIcon from \"@material-ui/icons/AddAPhotoOutlined\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport db from \"./firebase.js\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImageUpload from \"image-upload-react\";\r\n//important for getting nice style.\r\nimport \"image-upload-react/dist/index.css\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nfunction EditProfile({ userData, reload }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [name, setName] = useState(userData.name);\r\n  const [userName, setUserName] = useState(userData.userName);\r\n  const [iconUrl, setIconUrl] = useState(userData.iconUrl);\r\n  const [bio, setBio] = useState(userData.bio);\r\n  const [location, setLocation] = useState(userData.location);\r\n  const [email, setEmail] = useState(userData.emailId);\r\n  const [loading, setLoading] = useState(false);\r\n  const { uid } = useParams();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertType, setAlertType] = useState(\"error\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [imageSrc, setImageSrc] = useState();\r\n  const [imageAsFile, setImageAsFile] = useState();\r\n\r\n  const handleImageSelect = (e) => {\r\n    setImageSrc(URL.createObjectURL(e.target.files[0]));\r\n    setImageAsFile(e.target.files[0]);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const mystyle__button = {\r\n    color: \"white\",\r\n    padding: \"15px 32px\",\r\n    borderRadius: \"30px\",\r\n    backgroundColor: \"rgba(56,56,209,255)\" /* Green */,\r\n    fontSize: \"15px\",\r\n    border: \"none\",\r\n    // boxShadow: \"0px 10px 24px rgba(112, 144, 176, 0.8)\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImageSrc(iconUrl);\r\n  }, []);\r\n\r\n  const handleClickAlert = (type, message) => {\r\n    setAlertType(type);\r\n    setAlertMessage(message);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const updateUserDetails = async () => {\r\n    if (name.trim().length < 6)\r\n      handleClickAlert(\"error\", \"Name must be 5 character long..\");\r\n    else if (userName.trim().length < 6)\r\n      handleClickAlert(\"error\", \"UserName must be 5 character long..\");\r\n    else if (bio.trim().length < 20 || bio.trim().length > 251)\r\n      handleClickAlert(\"error\", \"Bio must be 20-251 character long..\");\r\n    else if (location.trim().length < 10)\r\n      handleClickAlert(\"error\", \"Location must be 10 character long..\");\r\n    else {\r\n      setLoading(true);\r\n      let photoUrl = iconUrl;\r\n\r\n      if (imageAsFile) {\r\n        console.log(\"image found\",imageSrc)\r\n        let filename = imageSrc.substring(imageSrc.lastIndexOf(\"/\") + 1);\r\n\r\n        // Add timestamp to File Name\r\n        const extension = filename.split(\".\").pop();\r\n        const name = filename.split(\".\").slice(0, -1).join(\".\");\r\n        filename = name + Date.now() + \".\" + extension;\r\n        await firebase.storage().ref(filename).put(imageAsFile);\r\n        photoUrl = await firebase.storage().ref(filename).getDownloadURL();\r\n      }\r\n      else console.log(\"image Not found\",imageSrc);\r\n\r\n      if (userName.trim() !== userData.userName) {\r\n        let data = await db\r\n          .collection(\"userDetails\")\r\n          .where(\"userName\", \"==\", userName)\r\n          .get();\r\n        if (data.docs.length) {\r\n          handleClickAlert(\"error\", \"UserName is already taken\");\r\n          setLoading(false);\r\n        } else updateData(photoUrl);\r\n      } else updateData(photoUrl);\r\n    }\r\n  };\r\n\r\n  const updateData = (photoUrl) => {\r\n    db.collection(\"userDetails\")\r\n      .doc(uid)\r\n      .update({\r\n        name: name.trim(),\r\n        userName: userName.trim(),\r\n        location: location.trim(),\r\n        bio: bio.trim(),\r\n        iconUrl:photoUrl\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        handleClickAlert(\"success\", \"Profile Updated...\");\r\n        handleClose();\r\n        reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit__profile\">\r\n      <Button color=\"black\" onClick={handleClickOpen}>\r\n        Edit Profile\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth={true}\r\n        maxWidth=\"xs\"\r\n      >\r\n        <div className=\"edit__header\">\r\n          <DialogTitle id=\"form-dialog-title\" style={{ padding: \"9px 20px\" }}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"baseline\",\r\n              }}\r\n            >\r\n              <Button\r\n                style={{ color: \"rgba(56,56,209,255)\", fontSize: \"20px\" }}\r\n                onClick={handleClose}\r\n                color=\"black\"\r\n              >\r\n                ✖\r\n              </Button>\r\n\r\n              <div>\r\n                <p>Edit</p>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  float: \"right\",\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={updateUserDetails}\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  style={mystyle__button}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </DialogTitle>\r\n        </div>\r\n        <DialogContent>\r\n          <div className=\"edit__main\">\r\n            <div className=\"image__cover__overlay\">\r\n              {/* <img src={`${iconUrl}`}></img> */}\r\n              <ImageUpload\r\n                handleImageSelect={handleImageSelect}\r\n                imageSrc={imageSrc}\r\n                setImageSrc={setImageSrc}\r\n                style={{\r\n                  width: 100,\r\n                  height: 100,\r\n                  background: \"#2381db\",\r\n                  borderRadius: 50,\r\n                  marginTop: 0,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"edit__text\">\r\n              <DialogContentText>\r\n                Fill your details accurately.\r\n              </DialogContentText>\r\n\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Enter your Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                style={{\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                id=\"username\"\r\n                label=\"Enter your Username\"\r\n                onChange={(e) => setUserName(e.target.value)}\r\n                value={userName}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              />\r\n              <TextField\r\n                id=\"Email\"\r\n                disabled\r\n                label=\"Enter your Email\"\r\n                value={email}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                id=\"bio\"\r\n                label=\"Bio\"\r\n                value={bio}\r\n                onChange={(e) => setBio(e.target.value)}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                rowsMax={4}\r\n                multiline\r\n                maxLength=\"40\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                type=\"location\"\r\n                value={location}\r\n                onChange={(e) => setLocation(e.target.value)}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                style={{\r\n                  width: \"100%\",\r\n                  marginTop: \"10px\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            open={openAlert}\r\n            autoHideDuration={3000}\r\n            onClose={handleCloseAlert}\r\n          >\r\n            <Alert onClose={handleCloseAlert} severity={alertType}>\r\n              {alertMessage}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\RegisterSec.js",["196","197"],"import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport \"./RegisterSec.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { auth, provider } from \"./firebase.js\";\r\nimport db from \"./firebase.js\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction RegisterSec() {\r\n  const [name, setName] = useState(\"\");\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setRedirect(true);\r\n  };\r\n\r\n  const mystyle = {\r\n    color: \"white\",\r\n    padding: \"10px 32px\",\r\n    marginTop: \"20px\",\r\n    borderRadius: \"30px\",\r\n    backgroundColor: \"#2381db\" /* Green */,\r\n    fontSize: \"15px\",\r\n    border: \"none\",\r\n    boxShadow: \"0px 10px 24px rgba(112, 144, 176, 0.8)\",\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        width: \"25ch\",\r\n        borderRadius: 15,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n      margin: {\r\n        margin: theme.spacing(1),\r\n      },\r\n      withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      textField: {\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleClickAlert = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    console.log(\"=>>>>>>>>>>>>>>>>>\", name, emailId, password);\r\n    if (!name.trim()) {\r\n      setAlertMessage(\"Name can't be Empty !...\");\r\n      handleClickAlert();\r\n    } else if (!emailId) {\r\n      setAlertMessage(\"Email can't be Empty !...\");\r\n      handleClickAlert();\r\n    } else if (password.length < 8) {\r\n      setAlertMessage(\"Password must contain at least 8 characters !...\");\r\n      handleClickAlert();\r\n    } else {\r\n      setLoading(true);\r\n      auth\r\n        .createUserWithEmailAndPassword(emailId, password)\r\n        .then(() => setUserDetailToDb())\r\n        .then(() => {\r\n          setLoading(false);\r\n          setRedirect(true);\r\n        })\r\n        .catch((e) => {\r\n          setAlertMessage(e.message);\r\n          handleClickAlert();\r\n          setLoading(false);\r\n        });\r\n    }\r\n\r\n  };\r\n\r\n  const setUserDetailToDb = () => {\r\n    let uid = auth.currentUser.uid;\r\n    let userName = emailId.slice(0, emailId.indexOf(\"@\"));\r\n    console.log(\"=>>>>>>>>>>\", userName);\r\n    db.collection(\"userDetails\")\r\n      .doc(uid)\r\n      .set({\r\n        name: name.trim(),\r\n        emailId: emailId,\r\n        iconUrl:\r\n          \"https://firebasestorage.googleapis.com/v0/b/socially-dbce1.appspot.com/o/profile.png?alt=media&token=ff331118-2821-42b6-b525-09148c43b857\",\r\n        userName: userName,\r\n        bio: \"I am new to wiseIndia...\",\r\n        location: \"\",\r\n        savedPosts: [],\r\n      });\r\n  };\r\n\r\n  const signUpGoogle = () => {\r\n    setLoading(true);\r\n    let result = {}\r\n    auth.signInWithPopup(provider)\r\n    .then((res) => {\r\n      result = res;\r\n      setLoading(false);\r\n      setRedirect(true);\r\n\r\n    }).then(() => {\r\n      db.collection(\"userDetails\")\r\n        .doc(result.user.uid)\r\n        .set({\r\n          name: result.user.displayName,\r\n          emailId: result.user.email,\r\n          iconUrl: result.user.photoURL,\r\n          userName: result.user.email.slice(0, result.user.email.indexOf(\"@\")),\r\n          bio: \"I am new to wiseIndia...\",\r\n          location: \"\",\r\n          savedPosts: [],\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          setAlertMessage(e.message);\r\n          handleClickAlert();\r\n        });\r\n    });\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/feed\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Dialog\r\n        open={!redirect}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n        style={{\r\n          backgroundImage: `url(\"bg2.jpg\")`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <DialogContent style={{ padding: \"0px\" }}>\r\n          <div className=\"r__main\">\r\n            <div className=\"r__left\">\r\n              <img src=\"https://firebasestorage.googleapis.com/v0/b/thewiseindia-8e9a9.appspot.com/o/register.jpg?alt=media&token=3e384896-b902-4cb2-9e8c-e06288af84db\"></img>\r\n            </div>\r\n\r\n            <div className=\"r__right\">\r\n              <div className=\"r__rightHeader\">\r\n                <h3>Create Account</h3>\r\n                <IconButton onClick={handleClose}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"r__rightBody\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                  <TextField\r\n                    id=\"name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    value={name}\r\n                    label=\"Enter your Name\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    id=\"E-mail\"\r\n                    value={emailId}\r\n                    onChange={(e) => setEmailId(e.target.value.trim())}\r\n                    label=\"Enter your Email\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  />\r\n\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      type={values.showPassword ? \"text\" : \"password\"}\r\n                      value={values.password.trim()}\r\n                      onChange={handleChange(\"password\")}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                              <VisibilityOff />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      labelWidth={70}\r\n                    />\r\n                  </FormControl>\r\n                </form>\r\n                {loading ? (\r\n                  <Button color=\"primary\" variant=\"outlined\" style={mystyle}>\r\n                    <CircularProgress color={\"#FFF\"} size={20} />\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    onClick={() => handleSignUp()}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    style={mystyle}\r\n                  >\r\n                    <p>Sign Up</p>\r\n                  </Button>\r\n                )}\r\n                <div\r\n                  style={{\r\n                    paddingTop: \"5px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      opacity: \"0.5\",\r\n                      fontSize: \"16px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Or register with\r\n                  </span>\r\n                </div>\r\n                <div className=\"signinwith\" onClick={signUpGoogle} >\r\n                  <img src=\"google.png\"></img>\r\n                </div>\r\n                <div className=\"register__signup\"  >\r\n                  <Link to={\"/login\"}>\r\n                    <p>Alreay have an Acoount?Login... </p>\r\n                  </Link>\r\n                </div>\r\n                <Snackbar\r\n                  open={openAlert}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleCloseAlert}\r\n                >\r\n                  <Alert onClose={handleCloseAlert} severity=\"warning\">\r\n                    {alertMessage}\r\n                  </Alert>\r\n                </Snackbar>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterSec;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\LoginSec.js",["198","199","200","201","202","203"],"import React, { useState,useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport \"./LoginSec.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { auth, provider } from \"./firebase.js\";\r\nimport db from \"./firebase.js\";\r\nimport clsx from \"clsx\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction LoginSec({show}) {\r\n  const [open, setOpen] = useState(show);\r\n  const [emailId, setEmailId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('=>>>>>>>>>>',show)\r\n  }, [])\r\n\r\n  const handleClose = () => {\r\n    setRedirect(true);\r\n  };\r\n  const mystyle = {\r\n    color: \"white\",\r\n    padding: \"10px 32px\",\r\n    marginTop:\"20px\",\r\n    borderRadius: \"30px\",\r\n    backgroundColor: \"#2381db\" /* Green */,\r\n    fontSize: \"15px\",\r\n    border: \"none\",\r\n    boxShadow: \"0px 10px 24px rgba(112, 144, 176, 0.8)\",\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        width: \"25ch\",\r\n        borderRadius: 15,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n      },\r\n      margin: {\r\n        margin: theme.spacing(1),\r\n      },\r\n      withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      textField: {\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n\r\n  const handleClickAlert = () => {\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!emailId) {\r\n      setAlertMessage(\"Email or username can't be Empty !...\");\r\n      handleClickAlert();\r\n    } else if (password.length < 8) {\r\n      setAlertMessage(\"Password must contain at least 8 characters !...\");\r\n      handleClickAlert();\r\n    } else {\r\n      setLoading(true);\r\n\r\n      if (!emailId.includes(\"@\")) {\r\n\r\n        let data = await db\r\n          .collection(\"userDetails\")\r\n          .where(\"userName\", \"==\", `${emailId}`)\r\n          .get();\r\n        let id = !!data.docs[0] ? data.docs[0].data().emailId : \"\";\r\n\r\n        if(id){\r\n          login(id,password);\r\n        }\r\n        else{\r\n        setAlertMessage(\"user not found !...\");\r\n        handleClickAlert();\r\n        setLoading(false);\r\n        }\r\n      } else login(emailId,password);\r\n    }\r\n  };\r\n\r\n  const login = (id,pass) => {\r\n    \r\n    auth\r\n      .signInWithEmailAndPassword(id, pass)\r\n      .then(() => {\r\n        setLoading(false);\r\n        setRedirect(true);\r\n      })\r\n      .catch((e) => {\r\n        setAlertMessage(e.message);\r\n        handleClickAlert();\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const signInGoogle = () => {\r\n    setLoading(true);\r\n    let result = {}\r\n    auth.signInWithPopup(provider)\r\n    .then((res) => {\r\n      result = res;\r\n      setLoading(false);\r\n      setRedirect(true);\r\n\r\n    }).catch((e) => {\r\n      setLoading(false);\r\n      setAlertMessage(e.message);\r\n      handleClickAlert();\r\n    });\r\n  };\r\n  \r\n\r\n  if (redirect) {\r\n    return <Redirect to='/feed'/>;\r\n  }\r\n\r\n  return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Dialog\r\n          open={true}\r\n          onClose={handleClose}\r\n          fullWidth\r\n          maxWidth=\"md\"\r\n          aria-labelledby=\"form-dialog-title\"\r\n          classes={{ paper: classes.rootStyle }}\r\n          style={{\r\n            backgroundImage: `url(\"bg2.jpg\")`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n          }}\r\n        >\r\n\r\n          <DialogContent style={{padding:\"0px\"}} >\r\n          <div className=\"r__main\">\r\n            <div className=\"r__left\">\r\n              <img src=\"https://firebasestorage.googleapis.com/v0/b/thewiseindia-8e9a9.appspot.com/o/register.jpg?alt=media&token=3e384896-b902-4cb2-9e8c-e06288af84db\"></img>\r\n            </div>\r\n\r\n            <div className=\"r__right\">\r\n              <div className=\"r__rightHeader\">\r\n                <h3>Welcome...!</h3>\r\n                <IconButton onClick={handleClose}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"r__rightBody\" style={{marginTop:\"8%\"}} >\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                  <TextField\r\n                    id=\"name\"\r\n                    value={emailId}\r\n                    onChange={(e) => setEmailId(e.target.value.trim())}\r\n                    label=\"Username or Email\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  />\r\n\r\n                  <FormControl\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                      width: \"90%\",\r\n                      marginTop: \"20px\",\r\n                    }}\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      type={values.showPassword ? \"text\" : \"password\"}\r\n                      value={values.password.trim()}\r\n                      onChange={handleChange(\"password\")}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {values.showPassword ? (\r\n                              <Visibility />\r\n                            ) : (\r\n                              <VisibilityOff />\r\n                            )}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                      labelWidth={70}\r\n                    />\r\n                  </FormControl>\r\n                </form>\r\n                {loading ? (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    style={mystyle}\r\n                  >\r\n                  <CircularProgress color={\"#FFF\"}  size={20}  />\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    onClick={() => handleLogin()}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    style={mystyle}\r\n                  >\r\n                    <p>Sign Up</p>\r\n                  </Button>\r\n                )}\r\n                <div\r\n                  style={{\r\n                    paddingTop: \"5px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    marginTop:\"20px\"\r\n                  }}\r\n                >\r\n                  <span\r\n                    style={{\r\n                      opacity: \"0.5\",\r\n                      fontSize: \"16px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Or register with\r\n                  </span>\r\n                </div>\r\n                <div className=\"signinwith\" onClick={signInGoogle} >\r\n                  <img src=\"google.png\"></img>\r\n                </div>\r\n                <div className=\"register__signup\">\r\n                <Link to={\"/register\"} >\r\n                  <p>Dont have an Acoount?Register... </p>\r\n                  </Link>\r\n                </div>\r\n                <Snackbar\r\n                  open={openAlert}\r\n                  autoHideDuration={6000}\r\n                  onClose={handleCloseAlert}\r\n                >\r\n                  <Alert onClose={handleCloseAlert} severity=\"warning\">\r\n                    {alertMessage}\r\n                  </Alert>\r\n                </Snackbar>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default LoginSec;\r\n","C:\\Users\\ak\\Desktop\\NewProject\\src\\PrivateRoute.js",["204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport default function PrivateRoute({ children,loggedIn, ...rest }) {    \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n        loggedIn ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\"\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":47,"column":6,"nodeType":"213","endLine":47,"endColumn":8,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":13,"column":7,"nodeType":"217","messageId":"218","endLine":13,"endColumn":18},{"ruleId":"215","severity":1,"message":"219","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":18},{"ruleId":"215","severity":1,"message":"220","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":14},{"ruleId":"215","severity":1,"message":"221","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":23},{"ruleId":"215","severity":1,"message":"222","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":17},{"ruleId":"215","severity":1,"message":"223","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":20},{"ruleId":"215","severity":1,"message":"224","line":7,"column":10,"nodeType":"217","messageId":"218","endLine":7,"endColumn":20},{"ruleId":"215","severity":1,"message":"225","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":22},{"ruleId":"215","severity":1,"message":"226","line":24,"column":10,"nodeType":"217","messageId":"218","endLine":24,"endColumn":21},{"ruleId":"215","severity":1,"message":"220","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"227","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":20},{"ruleId":"215","severity":1,"message":"228","line":18,"column":16,"nodeType":"217","messageId":"218","endLine":18,"endColumn":23},{"ruleId":"211","severity":1,"message":"229","line":23,"column":6,"nodeType":"213","endLine":23,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":33,"column":9,"nodeType":"233","endLine":37,"endColumn":11},{"ruleId":"231","severity":1,"message":"232","line":44,"column":11,"nodeType":"233","endLine":44,"endColumn":42},{"ruleId":"215","severity":1,"message":"234","line":20,"column":10,"nodeType":"217","messageId":"218","endLine":20,"endColumn":17},{"ruleId":"215","severity":1,"message":"235","line":20,"column":19,"nodeType":"217","messageId":"218","endLine":20,"endColumn":29},{"ruleId":"211","severity":1,"message":"236","line":66,"column":6,"nodeType":"213","endLine":66,"endColumn":8,"suggestions":"237"},{"ruleId":"231","severity":1,"message":"232","line":67,"column":11,"nodeType":"233","endLine":67,"endColumn":60},{"ruleId":"211","severity":1,"message":"238","line":15,"column":6,"nodeType":"213","endLine":15,"endColumn":8,"suggestions":"239"},{"ruleId":"215","severity":1,"message":"240","line":28,"column":7,"nodeType":"217","messageId":"218","endLine":28,"endColumn":14},{"ruleId":"215","severity":1,"message":"241","line":257,"column":9,"nodeType":"217","messageId":"218","endLine":257,"endColumn":29},{"ruleId":"211","severity":1,"message":"242","line":447,"column":6,"nodeType":"213","endLine":447,"endColumn":8,"suggestions":"243"},{"ruleId":"211","severity":1,"message":"244","line":451,"column":6,"nodeType":"213","endLine":451,"endColumn":15,"suggestions":"245"},{"ruleId":"231","severity":1,"message":"232","line":462,"column":15,"nodeType":"233","endLine":462,"endColumn":40},{"ruleId":"215","severity":1,"message":"246","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"247","line":80,"column":6,"nodeType":"213","endLine":80,"endColumn":11,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":132,"column":39,"nodeType":"251","messageId":"252","endLine":132,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":132,"column":55,"nodeType":"251","messageId":"252","endLine":132,"endColumn":56},{"ruleId":"215","severity":1,"message":"253","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":16},{"ruleId":"215","severity":1,"message":"254","line":20,"column":9,"nodeType":"217","messageId":"218","endLine":20,"endColumn":16},{"ruleId":"215","severity":1,"message":"255","line":27,"column":10,"nodeType":"217","messageId":"218","endLine":27,"endColumn":16},{"ruleId":"211","severity":1,"message":"256","line":79,"column":6,"nodeType":"213","endLine":79,"endColumn":8,"suggestions":"257"},{"ruleId":"215","severity":1,"message":"258","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":16},{"ruleId":"215","severity":1,"message":"259","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":19},{"ruleId":"215","severity":1,"message":"254","line":18,"column":9,"nodeType":"217","messageId":"218","endLine":18,"endColumn":16},{"ruleId":"215","severity":1,"message":"260","line":19,"column":10,"nodeType":"217","messageId":"218","endLine":19,"endColumn":15},{"ruleId":"215","severity":1,"message":"261","line":19,"column":17,"nodeType":"217","messageId":"218","endLine":19,"endColumn":25},{"ruleId":"215","severity":1,"message":"262","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":214,"column":9,"nodeType":"233","endLine":214,"endColumn":45},{"ruleId":"231","severity":1,"message":"232","line":13,"column":9,"nodeType":"233","endLine":13,"endColumn":29},{"ruleId":"215","severity":1,"message":"254","line":40,"column":9,"nodeType":"217","messageId":"218","endLine":40,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":66,"column":19,"nodeType":"251","messageId":"265","endLine":66,"endColumn":21},{"ruleId":"263","severity":1,"message":"264","line":66,"column":42,"nodeType":"251","messageId":"265","endLine":66,"endColumn":44},{"ruleId":"263","severity":1,"message":"264","line":68,"column":24,"nodeType":"251","messageId":"265","endLine":68,"endColumn":26},{"ruleId":"211","severity":1,"message":"266","line":74,"column":6,"nodeType":"213","endLine":74,"endColumn":8,"suggestions":"267"},{"ruleId":"263","severity":1,"message":"264","line":77,"column":19,"nodeType":"251","messageId":"265","endLine":77,"endColumn":21},{"ruleId":"263","severity":1,"message":"264","line":77,"column":42,"nodeType":"251","messageId":"265","endLine":77,"endColumn":44},{"ruleId":"231","severity":1,"message":"232","line":198,"column":11,"nodeType":"233","endLine":201,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":217,"column":9,"nodeType":"233","endLine":217,"endColumn":39},{"ruleId":"215","severity":1,"message":"262","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"268","line":66,"column":19,"nodeType":"217","messageId":"218","endLine":66,"endColumn":29},{"ruleId":"215","severity":1,"message":"269","line":10,"column":28,"nodeType":"217","messageId":"218","endLine":10,"endColumn":34},{"ruleId":"215","severity":1,"message":"270","line":10,"column":36,"nodeType":"217","messageId":"218","endLine":10,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":15,"column":9,"nodeType":"233","endLine":15,"endColumn":31},{"ruleId":"207","replacedBy":"271"},{"ruleId":"209","replacedBy":"272"},{"ruleId":"215","severity":1,"message":"273","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":29},{"ruleId":"215","severity":1,"message":"246","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":16},{"ruleId":"215","severity":1,"message":"268","line":38,"column":19,"nodeType":"217","messageId":"218","endLine":38,"endColumn":29},{"ruleId":"215","severity":1,"message":"274","line":41,"column":17,"nodeType":"217","messageId":"218","endLine":41,"endColumn":25},{"ruleId":"211","severity":1,"message":"275","line":76,"column":6,"nodeType":"213","endLine":76,"endColumn":8,"suggestions":"276"},{"ruleId":"231","severity":1,"message":"232","line":213,"column":15,"nodeType":"233","endLine":213,"endColumn":169},{"ruleId":"231","severity":1,"message":"232","line":320,"column":19,"nodeType":"233","endLine":320,"endColumn":41},{"ruleId":"215","severity":1,"message":"277","line":31,"column":10,"nodeType":"217","messageId":"218","endLine":31,"endColumn":14},{"ruleId":"215","severity":1,"message":"278","line":31,"column":16,"nodeType":"217","messageId":"218","endLine":31,"endColumn":23},{"ruleId":"211","severity":1,"message":"279","line":41,"column":6,"nodeType":"213","endLine":41,"endColumn":8,"suggestions":"280"},{"ruleId":"215","severity":1,"message":"281","line":164,"column":7,"nodeType":"217","messageId":"218","endLine":164,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":205,"column":15,"nodeType":"233","endLine":205,"endColumn":169},{"ruleId":"231","severity":1,"message":"232","line":304,"column":19,"nodeType":"233","endLine":304,"endColumn":41},{"ruleId":"215","severity":1,"message":"262","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"282","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"269","line":3,"column":20,"nodeType":"217","messageId":"218","endLine":3,"endColumn":26},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["285"],"no-unused-vars","'firebaseApp' is assigned a value but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","'Header' is defined but never used.","'DescriptionIcon' is defined but never used.","'ShareIcon' is defined but never used.","'IconButton' is defined but never used.","'makeStyles' is defined but never used.","'LinearProgress' is defined but never used.","'moreLoading' is assigned a value but never used.","'TouchAppIcon' is defined but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getNotiCount' and 'user'. Either include them or remove the dependency array.",["286"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSaved'. Either include it or remove the dependency array.",["287"],"React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["288"],"'options' is assigned a value but never used.","'handleCommentSupport' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPostData'. Either include it or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'getComments' and 'getTotalCommentsLen'. Either include them or remove the dependency array.",["290"],"'EditIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'getDislikedPosts', 'getLikedPosts', and 'getUserData'. Either include them or remove the dependency array.",["291"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Button' is defined but never used.","'classes' is assigned a value but never used.","'copied' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'savedPosts'. Either include it or remove the dependency array.",["292"],"'LoginSec' is defined but never used.","'RegisterSec' is defined but never used.","'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has missing dependencies: 'data.timestamp' and 'setBgColor'. Either include them or remove the dependency array.",["293"],"'setIconUrl' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.",["283"],["284"],"'AddAPhotoOutlinedIcon' is defined but never used.","'setEmail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'iconUrl'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setImageSrc' needs the current value of 'iconUrl'.",["294"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'show'. Either include it or remove the dependency array.",["295"],"'result' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},"Update the dependencies array to be: [userData]",{"range":"318","text":"319"},"Update the dependencies array to be: [getNotiCount, user]",{"range":"320","text":"321"},"Update the dependencies array to be: [getSaved]",{"range":"322","text":"323"},"Update the dependencies array to be: [getNotifications]",{"range":"324","text":"325"},"Update the dependencies array to be: [getPostData]",{"range":"326","text":"327"},"Update the dependencies array to be: [cmtType, getComments, getTotalCommentsLen]",{"range":"328","text":"329"},"Update the dependencies array to be: [getDislikedPosts, getLikedPosts, getUserData, uid]",{"range":"330","text":"331"},"Update the dependencies array to be: [savedPosts]",{"range":"332","text":"333"},"Update the dependencies array to be: [data.timestamp, setBgColor]",{"range":"334","text":"335"},"Update the dependencies array to be: [iconUrl]",{"range":"336","text":"337"},"Update the dependencies array to be: [show]",{"range":"338","text":"339"},[1503,1505],"[userData]",[891,893],"[getNotiCount, user]",[1832,1834],"[getSaved]",[489,491],"[getNotifications]",[12257,12259],"[getPostData]",[12337,12346],"[cmtType, getComments, getTotalCommentsLen]",[2380,2385],"[getDislikedPosts, getLikedPosts, getUserData, uid]",[2326,2328],"[savedPosts]",[2596,2598],"[data.timestamp, setBgColor]",[2714,2716],"[iconUrl]",[1718,1720],"[show]"]